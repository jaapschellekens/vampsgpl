head	1.2;
access;
symbols;
locks;
comment	@ * @;


1.2
date	95.12.05.03.07.11;	author schj;	state Exp;
branches;
next	1.1;

1.1
date	95.08.23.13.22.08;	author schj;	state Beta;
branches;
next	;


desc
@not used
@


1.2
log
@*** empty log message ***
@
text
@#include "../include/vamps.h"

double **y,*xx;

/* This is my C translation */

rk4 (y,dydx,n,x,h,yout,aflij)
double  y[];
double  dydx[];
int     n;
double  x;
double  h;
double  yout[];
void (*aflij)(double,double [], double []);
{
  int i;
  double  xh, hh, h6, *dym, *dyt, *yt;

  dym = (double *) ts_memory ((void *) NULL, n * sizeof (double), progname);
  dyt = (double *) ts_memory ((void *) NULL, n * sizeof (double), progname);
  yt = (double *) ts_memory ((void *) NULL, n * sizeof (double), progname);

  hh = h * 0.5;
  h6 = h / 6.0;
  xh = x + hh;
  for (i = 0; i < n; i++)
    yt[i] = y[i] + hh * dydx[i];
  (*aflij) (xh, yt, dyt);

  for (i = 0; i < n; i++)
    yt[i] = y[i] + hh * dyt[i];
  (*aflij) (xh, yt, dym);

  for (i = 0; i < n; i++)
    {
      yt[i] = y[i] + h * dym[i];
      dym[i] += dyt[i];
    }
  (*aflij) (x + h, yt, dyt);

  for (i = 0; i < n; i++)
    yout[i] = y[i] + h6 * (dydx[i] + dyt[i] + 2.0 * dym[i]);

  free (yt);
  free (dym);
  free (dyt);
}

void
rk (vstart, dydx, nvar, x1, x2, nstep,aflij)
double  vstart[];
double  dydx[];
int     nvar;
double  x1;
double  x2;
int     nstep;
void (*aflij)(double,double [], double []);
{
  int     i, k;
  double  x, h;
  double *v, *vout, *dv;

  v = (double *) ts_memory ((void *) NULL, nvar * sizeof (double), progname);
  vout = (double *) ts_memory ((void *) NULL, nvar * sizeof (double), progname);
  dv = (double *) ts_memory ((void *) NULL, nvar * sizeof (double), progname);

  for (i = 0; i < nvar; i++)
    {
      v[i] = vstart[i];
      y[i][0] = v[i];
    }
  xx[0] = x1;
  x = x1;
  h = (x2 - x1) / nstep;
  for (k = 0; k < nstep; k++)
    {
      (*aflij) (x, v, dv);
      rk4 (v, dv, nvar, x, h, vout);
      if ((double) (x + h) == x)
	{
	  fprintf (stderr, "Error in rk\n");
	  exit (1);
	}
      x += h;
      xx[k + 1] = x;
      for (i = 0; i < nvar; i++)
	{
	  v[i] = vout[i];
	  y[i][k + 1] = v[i];
	}
    }

  free (v);
  free (vout);
  free (dv);
}
@


1.1
log
@Initial revision
@
text
@@
