head	1.19;
access;
symbols;
locks;
comment	@ * @;


1.19
date	99.01.06.12.13.01;	author schj;	state Alpha;
branches;
next	1.18;

1.18
date	99.01.06.12.07.49;	author schj;	state Alpha;
branches;
next	1.17;

1.17
date	97.09.09.08.39.10;	author schj;	state Exp;
branches;
next	1.16;

1.16
date	97.01.16.15.06.45;	author schj;	state Exp;
branches;
next	1.15;

1.15
date	96.11.05.14.59.13;	author schj;	state Alpha;
branches;
next	1.14;

1.14
date	96.10.22.17.40.04;	author schj;	state Exp;
branches;
next	1.13;

1.13
date	96.03.25.07.54.08;	author schj;	state alpha;
branches;
next	1.12;

1.12
date	96.02.27.11.37.16;	author schj;	state Exp;
branches;
next	1.11;

1.11
date	95.12.05.03.07.11;	author schj;	state Exp;
branches;
next	1.10;

1.10
date	95.10.30.13.54.33;	author schj;	state Exp;
branches;
next	1.9;

1.9
date	95.10.23.07.52.03;	author schj;	state Exp;
branches;
next	1.8;

1.8
date	95.09.30.18.03.04;	author schj;	state Exp;
branches;
next	1.7;

1.7
date	95.09.26.21.54.50;	author schj;	state Exp;
branches;
next	1.6;

1.6
date	95.09.26.21.20.22;	author schj;	state Exp;
branches;
next	1.5;

1.5
date	95.09.25.12.54.26;	author schj;	state Exp;
branches;
next	1.4;

1.4
date	95.09.19.13.42.39;	author schj;	state Exp;
branches;
next	1.3;

1.3
date	95.09.01.11.43.50;	author schj;	state Exp;
branches;
next	1.2;

1.2
date	95.08.29.13.56.44;	author schj;	state Exp;
branches;
next	1.1;

1.1
date	95.08.29.12.52.18;	author schj;	state Exp;
branches;
next	;


desc
@get a string form input file
@


1.19
log
@Version: 0.99g
@
text
@/* $Header: /home/schj/src/vamps_0.99g/src/util/RCS/getstr.c,v 1.18 1999/01/06 12:07:49 schj Alpha $ */
/*
 *  $RCSfile: getstr.c,v $
 *  $Author: schj $
 *  $Date: 1999/01/06 12:07:49 $
 */

/*
 * getstr.c - extract var from vamps output file */

static char RCSid[] =
"$Id: getstr.c,v 1.18 1999/01/06 12:07:49 schj Alpha $";

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "vamps.h"
#include "deffile.h"
#include "getopt.h"

#define VSELDES "extract var from vamps output file"
#define MAXPAR 12

struct option options[] =
{
  {"help", no_argument, 0, 'h'},
  {"copyright", no_argument, 0, 'c'},
  {"license", no_argument, 0, 'l'},
  {"Comment", required_argument, 0, 'C'},
  {"section", required_argument, 0, 's'},
  {"index", required_argument, 0, 'i'},
  {"name", required_argument, 0, 'n'},
  {"exit", no_argument, 0, 'e'},
  {"print-as-array", no_argument, 0, 'p'},
  {"vsebose", no_argument, 0, 'v'},
  {0, 0, 0, 0},
};

#define USE "\t[-h][-c][-e][-l][-i indexfile]\n\t\t[[-s section -n name]...] filename"
#define EXPL "\
\t--help\t\t\tshow this information\n\
\t--copyright\t\tshow part of the GPL\n\
\t--licence\t\tshow part of the GPL\n\
\t--Comment commentchar\tset commentchar\n\
\t--exit\t\t\tset only exit status (1 if found)\n\
\t--print-as-array\tTreat variable as an array\n\
\t--section\t\tsection in the file\n\
\t--name\t\t\tthe variable in the section\n\
\t--index indexfile\tuse indexfile as a section index\n\
"
#define OPTSTR "s:lcvhn:C:epi:"
char *progname;
FILE *genoutfile = NULL;

/* Dummy vars for perror.c */
int interpreter(int verb) {return 0;}
int exit_is_inter = 0;
int switchtoint = 0;

int
main (int argc,char *argv[])
{
  int verbose =0;
  char **name;
  char **section;
  char *inname = NULL;
  void disclaim (char *);
  void showinfo (int verb);
  double  *thetar;
  int	prar=FALSE;
  int  pts;
  int what;
  int secs=0;
  int names=0;
  int quiet = FALSE;
  int i;
  int retval=0;

  progname = argv[0];

  if (argv[1] == NULL)
    {
      showinfo (0);
    }

  section = (char **) ts_memory (NULL, MAXPAR * sizeof (char *), progname);
  name = (char **) ts_memory (NULL, MAXPAR * sizeof (char *), progname);

  for (i = 0; i < MAXPAR; i++)
    {
      section[i] = (char *) ts_memory (NULL, 128 * sizeof (char), progname);
      name[i] = (char *) ts_memory (NULL,128 * sizeof (char), progname);
    }

  if (*argv[argc - 1] != '-' || strcmp (argv[argc - 1], "-") == 0)
    {
      inname = argv[argc - 1];
      if (!opendef (inname))
	Perror (progname, 1,1, RCSid, "Could not open:", inname);
    }

  while ((what = getopt_long (argc, argv, OPTSTR, options, NULL)) != EOF)
    {
      switch (what)
	{
	case 'l':
	  {
	    disclaim (argv[0]);
	    break;
	  }
	case 'i':
	  {
	    FILE *ttfile;
	    usesecptr =1;
	    defverb = verbose;

	    if ((ttfile = fopen(optarg,"r")) != NULL){
	      (void)fclose(ttfile);
	      readindex(optarg);
	    }else
	      Perror(progname,1,1,RCSid,"Error opening index:",optarg);
	    break;
	  }

	case 'e':
	  {
	    quiet = TRUE;
	    break;
	  }
	case 'v':
	  {
	    verbose++;
	    break;
	  }
	case 'p':
	  {
	    prar = TRUE;
	    break;
	  }
	case 'C':
	  {
	    commchar[0] = *optarg;
	    break;
	  }
	case 'c':
	  {
	    disclaim (argv[0]);
	    break;
	  }
	case 's':
	  {
	    strcpy (section[secs], optarg);
	    secs++;
	    break;
	  }
	case 'n':
	  {
	    strcpy (name[names], optarg);
	    names++;
	    break;
	  }
	case 'h':
	  {
	    showinfo (1);
	    break;
	  }
	default:
	  break;
	}
    }

  if ((names + secs) < 2)
    showinfo (1);


  if (names != secs)
	showinfo(1);

  for (i=0; i < (names+secs) / 2; i++)
    {
      if (quiet)
	{
	  if(!getdefstr (section[i], name[i], NULL, NULL, FALSE))
	     retval++;
	}
      else{
	if (prar){
	   thetar=getdefar (section[i], name[i], NULL, NULL,&pts, TRUE);
	   for (i=0;i<pts;i++)
		   fprintf(stdout,"%g\n",thetar[i]);
	}else
	fprintf (stdout, "%s\n", getdefstr (section[i], name[i], NULL, NULL, TRUE));
      }
    }

  if (inname)
    closedef ();
  if (quiet){
    if (retval)
      return 0;
    else
      return 1;
  }
  else
    return 0;
}

void
disclaim (char *progname)
{
  (void) fprintf (stderr, "%s:\n%s\n", progname, GNUL);
  exit (0);
}

void
showinfo (verb)
     int verb;
{
  (void) fprintf (stderr, "%s - %s\n\t(c) %s - %s\n\t(%s)", progname, VSELDES, AUTHOR, DATE, RCSid);
  (void) fprintf (stderr, "\n\tfor vamps %s",PROVERSION);
  (void) fprintf (stderr, "\n\tBuild on %s at %s by %s (%s)", WHERE, BUILDDATE, WHO, OS);
  (void) fprintf (stderr, "\n\n\tusage:\n\t%s %s\n\n", progname, USE);
  if (verb)
    (void) fprintf (stderr, "%s", EXPL);
  exit (1);
}
@


1.18
log
@Version: 0.99g
@
text
@d1 1
a1 1
/* $Header: /home/schjpriv/schj/src/vamps_0.99e/src/util/RCS/getstr.c,v 1.17 1997/09/09 08:39:10 schj Exp $ */
d5 1
a5 1
 *  $Date: 1997/09/09 08:39:10 $
d12 1
a12 1
"$Id: getstr.c,v 1.17 1997/09/09 08:39:10 schj Exp $";
@


1.17
log
@0.99e version
@
text
@d1 1
a1 1
/* $Header: /home/schj/src/vamps_0.99c/src/util/RCS/getstr.c,v 1.16 1997/01/16 15:06:45 schj Exp $ */
d5 1
a5 1
 *  $Date: 1997/01/16 15:06:45 $
d12 1
a12 1
"$Id: getstr.c,v 1.16 1997/01/16 15:06:45 schj Exp $";
d67 1
a67 1
  void disclaim ();
d99 1
a99 1
	Perror (progname, 1, RCSid, "Could not open:", inname);
d108 1
a108 1
	    disclaim ();
d121 1
a121 1
	      Perror(progname,1,RCSid,"Error opening index:",optarg);
d147 1
a147 1
	    disclaim ();
d209 1
a209 1
disclaim ()
d211 1
a211 1
  (void) fprintf (stderr, "%s\n", GNUL);
@


1.16
log
@layout + stuff
@
text
@d1 1
a1 1
/* $Header: /home/schj/src/vamps_0.99/src/util/RCS/getstr.c,v 1.15 1996/11/05 14:59:13 schj Alpha $ */
d5 1
a5 1
 *  $Date: 1996/11/05 14:59:13 $
d12 1
a12 1
"$Id: getstr.c,v 1.15 1996/11/05 14:59:13 schj Alpha $";
d92 1
a92 1
      section[i] = (char *) ts_memory (NULL,128 * sizeof (char), progname);
d142 1
a142 1
	    commchar = *optarg;
@


1.15
log
@Updated to Alpha version
@
text
@d1 1
a1 1
/* $Header: /home/schj/src/vamps_0.99/src/util/RCS/getstr.c,v 1.14 1996/10/22 17:40:04 schj Exp $ */
d5 1
a5 1
 *  $Date: 1996/10/22 17:40:04 $
d12 1
a12 1
"$Id: getstr.c,v 1.14 1996/10/22 17:40:04 schj Exp $";
d54 5
@


1.14
log
@no changes
@
text
@d1 1
a1 1
/* $Header: /home/hkl/hydro/promo/schj/nhome/src/vamps_0.98/src/util/RCS/getstr.c,v 1.13 1996/03/25 07:54:08 schj alpha $ */
d5 1
a5 36
 *  $Date: 1996/03/25 07:54:08 $
 *  $Log: getstr.c,v $
 *  Revision 1.13  1996/03/25 07:54:08  schj
 *  updated help message (link to vamps version)
 *
 *  Revision 1.12  1996/02/27 11:37:16  schj
 *  changed to ansi
 *
 * Revision 1.11  1995/12/05  03:07:11  schj
 * added array option
 *
 * Revision 1.10  1995/10/30  13:54:33  schj
 * added deffile.h
 * ,
 *
 * Revision 1.9  1995/10/23  07:52:03  schj
 * *** empty log message ***
 *
 * Revision 1.8  1995/09/30  18:03:04  schj
 * added stdin suppport
 *
 * Revision 1.7  1995/09/26  21:54:50  schj
 * added -e
 *
 * Revision 1.6  1995/09/26  21:20:22  schj
 * added multiple var support
 *
 * Revision 1.5  1995/09/25  12:54:26  schj
 * updated layout of help screen
 *
 * Revision 1.4  1995/09/19  13:42:39  schj
 * updated exitonerror
 *
 * Revision 1.3  1995/09/01  11:43:50  schj
 * updated header
 *
d12 1
a12 1
"$Id: getstr.c,v 1.13 1996/03/25 07:54:08 schj alpha $";
d22 1
d31 1
d35 1
d39 1
a39 1
#define USE "\t[-h][-c][-e][-l][[-s section -n name]...] filename"
d44 1
a44 1
\t--Comment\t\tset commentchar\n\
d46 2
a47 2
\t--print-as-array\t\tTreat variable as an array\n\
\t--section\t\t\tsection in the file\n\
d49 1
d51 1
a51 1
#define OPTSTR "s:lchn:C:ep"
d58 3
a60 2
  char name[1024];
  char section[1024];
d68 2
a69 3
  int cnt = 0;
  int ckn =0;
  int cks = 0;
d72 1
d81 9
d106 14
d125 5
d147 2
a148 3
	    strcpy (section, optarg);
	    cnt++;
 	    cks++;
d153 2
a154 3
	    strcpy (name, optarg);
	    cnt++;
	    ckn++;
d167 1
a167 1
  if (cnt < 2)
d171 1
a171 1
  if (ckn != cks)
d174 1
a174 1
  for (i=0; i < cnt / 2; i++)
d178 2
a179 2
	  if (!getdefstr (section, name, NULL, NULL, FALSE))
	    return 1;
d183 1
a183 1
	   thetar=getdefar (section, name, NULL, NULL,&pts, TRUE);
d187 1
a187 1
	fprintf (stdout, "%s\n", getdefstr (section, name, NULL, NULL, TRUE));
d193 8
a200 2

  return 0;
@


1.13
log
@updated help message (link to vamps version)
@
text
@d1 2
a2 2
/* $Header: /home/schj/src/vamps_0.975/src/util/RCS/getstr.c,v 1.12 1996/02/27 11:37:16 schj Exp $ */
/*-
d5 1
a5 1
 *  $Date: 1996/02/27 11:37:16 $
d7 3
d43 1
a43 1
/*-
d47 1
a47 1
"$Id: getstr.c,v 1.12 1996/02/27 11:37:16 schj Exp $";
@


1.12
log
@changed to ansi
@
text
@d1 1
a1 1
/* $Header: /homes/schj/src/vamps_0.96/src/util/RCS/getstr.c,v 1.11 1995/12/05 03:07:11 schj Exp $ */
d5 1
a5 1
 *  $Date: 1995/12/05 03:07:11 $
d7 3
d44 1
a44 1
"$Id: getstr.c,v 1.11 1995/12/05 03:07:11 schj Exp $";
d210 1
@


1.11
log
@added array option
@
text
@d1 1
a1 1
/* $Header: /homes/schj/src/vamps_0.91/RCS/getstr.c,v 1.10 1995/10/30 13:54:33 schj Exp $ */
d5 1
a5 1
 *  $Date: 1995/10/30 13:54:33 $
d7 3
d41 1
a41 1
"$Id: getstr.c,v 1.10 1995/10/30 13:54:33 schj Exp $";
d81 1
a81 3
main (argc, argv)
     int argc;
     char *argv[];
d86 2
a87 2
  void disclaim __P (());
  void showinfo __P ((int verb));
@


1.10
log
@added deffile.h
,
@
text
@d1 1
a1 1
/* $Header: /home/hkl/hydro/promo/schj/nhome/src/vamps_0.9/util/RCS/getstr.c,v 1.9 1995/10/23 07:52:03 schj Exp $ */
d5 1
a5 1
 *  $Date: 1995/10/23 07:52:03 $
d7 4
d37 2
a38 2
static  char RCSid[] =
"$Id: getstr.c,v 1.9 1995/10/23 07:52:03 schj Exp $";
d43 3
a45 3
#include "../include/vamps.h"
#include "../include/deffile.h"
#include "../include/getopt.h"
d58 1
d69 1
d73 3
a75 3
#define OPTSTR "s:lchn:C:e"
char   *progname;
FILE	*genoutfile=NULL;
d79 2
a80 2
int     argc;
char   *argv[];
d82 8
a89 5
  char	name[1024];
  char    section[1024];
  char   *inname = NULL;
  void	disclaim __P(());
  void	showinfo __P((int verb));
d91 5
a95 2
  int cnt=0;
  int quiet=FALSE;
d97 1
a97 1
  progname=argv[0];
d104 6
a109 5
  if (*argv[argc-1] != '-' || strcmp(argv[argc-1],"-")==0){
        inname=argv[argc-1];
        if (!opendef(inname))
	     Perror(progname,1,RCSid,"Could not open:",inname);
  }
d117 1
a117 1
	    disclaim();
d122 6
a127 1
	    quiet=TRUE;
d132 1
a132 1
	    commchar= *optarg;
d137 1
a137 1
	    disclaim();
d142 1
a142 1
	    strcpy(section,optarg);
d144 1
d149 1
a149 1
	    strcpy(name ,optarg);
d151 1
a151 7
	    if ((cnt % 2) == 0){
		if (quiet){
		  if (!getdefstr(section,name,NULL,NULL,FALSE))
			return 1;
		}else
  		  fprintf(stdout,"%s\n",getdefstr(section,name,NULL,NULL,TRUE));
	    }
d158 1
a158 1
	   }
d164 23
a186 2
  if (cnt <2)
	showinfo (1);
d189 1
a189 1
	closedef();
d198 1
a198 1
  exit(0);
d202 2
a203 2
showinfo(verb)
int	verb;
d205 6
a210 6
      (void) fprintf (stderr, "%s - %s\n\t(c) %s - %s\n\t(%s)", progname, VSELDES,AUTHOR,DATE,RCSid);
  (void) fprintf (stderr, "\n\tBuild on %s at %s by %s (%s)", WHERE, BUILDDATE, WHO,OS);
      (void) fprintf (stderr, "\n\n\tusage:\n\t%s %s\n\n", progname, USE);
      if (verb)
      	(void) fprintf(stderr,"%s",EXPL);
      exit (1);
@


1.9
log
@*** empty log message ***
@
text
@d1 1
a1 1
/* $Header: /home/hkl/hydro/promo/schj/nhome/src/prosper/vamps_0.9/util/RCS/getstr.c,v 1.8 1995/09/30 18:03:04 schj Exp $ */
d5 1
a5 1
 *  $Date: 1995/09/30 18:03:04 $
d7 3
d34 1
a34 1
"$Id: getstr.c,v 1.8 1995/09/30 18:03:04 schj Exp $";
d40 1
@


1.8
log
@added stdin suppport
@
text
@d1 3
a3 2
/* $Header: /home/schj/src/prosper/vamps_0.9/util/RCS/getstr.c,v 1.7 1995/09/26 21:54:50 schj Exp $ */
/*- $RCSfile: getstr.c,v $
d5 1
a5 1
 *  $Date: 1995/09/26 21:54:50 $
d7 3
d27 2
a28 1
/*- getdefstr.c - extract var from vamps output file */
d31 1
a31 1
"$Id: getstr.c,v 1.7 1995/09/26 21:54:50 schj Exp $";
d91 1
a91 1
	     Perror(1,RCSid,"Could not open:",inname);
d168 2
a169 1
      (void) fprintf (stderr, "\n\n\tusage:\n\t%s %s\n", progname, USE);
@


1.7
log
@added -e
@
text
@d1 1
a1 1
/* $Header: /home/schj/src/prosper/vamps_0.9/util/RCS/getstr.c,v 1.6 1995/09/26 21:20:22 schj Exp $ */
d4 1
a4 1
 *  $Date: 1995/09/26 21:20:22 $
d6 3
d26 1
a26 1
"$Id: getstr.c,v 1.6 1995/09/26 21:20:22 schj Exp $";
d55 2
d83 1
a83 1
  if (*argv[argc-1] != '-'){
@


1.6
log
@added multiple var support
@
text
@d1 2
a2 2
/* $Header: /home/hkl/hydro/promo/schj/nhome/src/prosper/vamps_0.9/util/RCS/getdefstr.c,v 1.5 1995/09/25 12:54:26 schj Exp $ */
/*- $RCSfile: getdefstr.c,v $
d4 5
a8 2
 *  $Date: 1995/09/25 12:54:26 $
 *  $Log: getdefstr.c,v $
d23 1
a23 1
"$Id: getdefstr.c,v 1.5 1995/09/25 12:54:26 schj Exp $";
d41 1
d45 1
a45 1
#define USE "\t[-h][-c][-l][[-s section -n name]...] filename"
d51 1
d53 1
a53 1
#define OPTSTR "s:lchn:C:"
d69 1
d93 5
d118 7
a124 2
	    if ((cnt % 2) == 0)
  		fprintf(stdout,"%s\n",getdefstr(section,name,"",inname,TRUE));
d142 1
@


1.5
log
@updated layout of help screen
@
text
@d1 1
a1 1
/* $Header: /home/hkl/hydro/promo/schj/nhome/src/prosper/vamps_0.9/util/RCS/getdefstr.c,v 1.4 1995/09/19 13:42:39 schj Exp $ */
d4 1
a4 1
 *  $Date: 1995/09/19 13:42:39 $
d6 3
d20 1
a20 1
"$Id: getdefstr.c,v 1.4 1995/09/19 13:42:39 schj Exp $";
a33 1
  {"verbose", no_argument, 0, 'v'},
a34 1
  {"Header", no_argument, 0, 'H'},
d41 1
a41 1
#define USE "\t[-h][-H][-c][-l] -s section -n name filename"
a42 1
\t--verbose\t\tbe verbose about performed actions\n\
d46 1
a46 1
\t--Header\t\tomit header in output\n\
d48 1
a48 1
#define OPTSTR "s:lcHhn:"
d63 1
d72 6
d82 1
a82 1
	case 'v':
d84 1
a84 1
	    verbose = TRUE;
d87 1
a87 1
	case 'l':
d89 1
a89 1
	    disclaim();
d100 1
d106 3
d121 2
d124 2
a125 6
  if (!inname)
    inname = argv[optind];


  fprintf(stdout,"%s\n",getdefstr(section,name,"",inname,TRUE));

@


1.4
log
@updated exitonerror
@
text
@d1 1
a1 1
/* $Header: /home/hkl/hydro/promo/schj/nhome/src/prosper/vamps_0.9/util/RCS/getdefstr.c,v 1.3 1995/09/01 11:43:50 schj Exp $ */
d4 1
a4 1
 *  $Date: 1995/09/01 11:43:50 $
d6 3
d17 1
a17 1
"$Id: getdefstr.c,v 1.3 1995/09/01 11:43:50 schj Exp $";
d131 2
a132 2
      (void) fprintf (stderr, "%s - %s\n(%s)\n(c) %s - %s\n", progname, VSELDES,RCSid,AUTHOR,DATE);
      (void) fprintf (stderr, "usage:\n%s %s\n", progname, USE);
@


1.3
log
@updated header
@
text
@d1 1
a1 1
/* $Header: /home/hkl/hydro/promo/schj/nhome/src/prosper/vamps_0.9/util/RCS/getdefstr.c,v 1.2 1995/08/29 13:56:44 schj Exp $ */
d4 5
a8 2
 *  $Date: 1995/08/29 13:56:44 $
 *  $Log$
d14 1
a14 1
"$Id: getdefstr.c,v 1.2 1995/08/29 13:56:44 schj Exp $";
a110 1
  exitonerror = TRUE;
d112 1
a112 1
  fprintf(stdout,"%s\n",getdefstr(section,name,"",inname));
@


1.2
log
@initial beta
@
text
@d1 1
a1 1
/* $Header: /home/hkl/hydro/promo/schj/nhome/src/prosper/vamps_0.8/util/RCS/getdefstr.c,v 1.1 1995/08/29 12:52:18 schj Exp $ */
d4 2
a5 1
 *  $Date: 1995/08/29 12:52:18 $
d11 1
a11 1
"$Id: getdefstr.c,v 1.1 1995/08/29 12:52:18 schj Exp $";
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
/* $Header: /home/hkl/hydro/promo/schj/nhome/src/prosper/vamps_0.8/util/RCS/vsel.c,v 1.6 1995/08/24 14:14:24 schj Exp $ */
/*- $RCSfile: vsel.c,v $
d4 1
a4 1
 *  $Date: 1995/08/24 14:14:24 $
d10 1
a10 1
"$Id: vsel.c,v 1.6 1995/08/24 14:14:24 schj Exp $";
d55 3
d109 1
a109 1
  fprintf(stdout,"%s",getdefstr(section,name,"",inename);
@
