head	1.7;
access;
symbols;
locks;
comment	@ * @;


1.7
date	99.01.06.12.13.01;	author schj;	state Alpha;
branches;
next	1.6;

1.6
date	99.01.06.12.07.49;	author schj;	state Alpha;
branches;
next	1.5;

1.5
date	97.01.16.15.05.08;	author schj;	state Exp;
branches;
next	1.4;

1.4
date	96.11.05.15.00.48;	author schj;	state Alpha;
branches;
next	1.3;

1.3
date	96.10.22.17.56.23;	author schj;	state Exp;
branches;
next	1.2;

1.2
date	96.04.09.12.08.16;	author schj;	state Exp;
branches;
next	1.1;

1.1
date	96.03.18.18.14.45;	author schj;	state alpha;
branches;
next	;


desc
@Smooths soil profiles using a moving average
@


1.7
log
@Version: 0.99g
@
text
@/* $Header: /home/schj/src/vamps_0.99g/src/soil/RCS/smooth.c,v 1.6 1999/01/06 12:07:49 schj Alpha $ 
 */
/*  $RCSfile: smooth.c,v $
 *  $Author: schj $
 *  $Date: 1999/01/06 12:07:49 $
 */

#ifdef DDEBUG
static char RCSid[] =
"$Id: smooth.c,v 1.6 1999/01/06 12:07:49 schj Alpha $";

#endif

#include "swatsoil.h"

/*+Name: smooth
 *
 *  Prototype:  void smooth (int inter,int what)
 *  Description:  smooths the ksat profile by using a simple moving
 *  average of size inter. If inter = 0 no smoothing is done.  What
 *  determine what to smooth: 1 = ksat, 2 = thetas, 3 =
 *  residual_water
 *  Remarks: Disabled at the moment!
 *  Returns: nothing+*/
void
smooth (int inter, int what)
{
  int     j, i, pt;
  double  tot;
  showit("swatsoil",ERR,"Smoothing disabled in this version",0,0);
  return;

  if (inter)
    {
      for (i = 0; i <= (inter / 2); i++)	/*
						 * Smooth first part that falls
						 * outside limit of moving average
						 */
	{
	  tot = 0.0;
	  pt = 0;
	  for (j = i; j <= (inter / 2); j++)
	    {
	      switch (what)
		{
		case 1:
		  tot += node[j].sp->ksat;
		  break;
		case 2:
		  tot += node[j].sp->thetas;
		  break;
		case 3:
		  tot += node[j].sp->residual_water;
		  break;
		}
	      pt++;
	    }
	  switch (what)
	    {
	    case 1:
	      node[i].sp->ksat = (double) (1.0 / (double) pt) * tot;
	      break;
	    case 2:
	      node[i].sp->thetas = (double) (1.0 / (double) pt) * tot;
	      break;
	    case 3:
	      node[i].sp->residual_water = (double) (1.0 / (double) pt) * tot;
	      break;
	    }
	}
      /*
       * Smooth inner part 
       */
      for (i = (inter / 2); i < layers - (inter / 2); i++)
	{
	  tot = 0.0;
	  pt = 0;
	  for (j = i - (inter / 2); j <= i + (inter / 2); j++)
	    {
	      switch (what)
		{
		case 1:
		  tot += node[j].sp->ksat;
		  break;
		case 2:
		  tot += node[j].sp->thetas;
		  break;
		case 3:
		  tot += node[j].sp->residual_water;
		  break;
		}
	      pt++;
	    }

	  switch (what)
	    {
	    case 1:
	      node[i].sp->ksat = (double) (1.0 / (double) pt) * tot;
	      break;
	    case 2:
	      node[i].sp->thetas = (double) (1.0 / (double) pt) * tot;
	      break;
	    case 3:
	      node[i].sp->residual_water = (double) (1.0 / (double) pt) * tot;
	      break;
	    }
	}
      for (i = layers - (inter / 2); i < layers; i++)	
      /* Smooth last part that falls outside limit of moving average */
	{
	  tot = 0.0;
	  pt = 0;
	  for (j = i; j < layers; j++)
	    {
	      switch (what)
		{
		case 1:
		  tot += node[j].sp->ksat;
		  break;
		case 2:
		  tot += node[j].sp->thetas;
		  break;
		case 3:
		  tot += node[j].sp->residual_water;
		  break;
		}
	      pt++;
	    }
	  switch (what)
	    {
	    case 1:
	      node[i].sp->ksat = (double) (1.0 / (double) pt) * tot;
	      break;
	    case 2:
	      node[i].sp->thetas = (double) (1.0 / (double) pt) * tot;
	      break;
	    case 3:
	      node[i].sp->residual_water = (double) (1.0 / (double) pt) * tot;
	      break;
	    }
	}
    }
}
@


1.6
log
@Version: 0.99g
@
text
@d1 1
a1 1
/* $Header: /home/schjpriv/schj/src/vamps_0.99e/src/soil/RCS/smooth.c,v 1.5 1997/01/16 15:05:08 schj Exp $ 
d5 1
a5 1
 *  $Date: 1997/01/16 15:05:08 $
d10 1
a10 1
"$Id: smooth.c,v 1.5 1997/01/16 15:05:08 schj Exp $";
@


1.5
log
@layout + stuff
Is broken at the moment!!
@
text
@d1 1
a1 1
/* $Header: /home/schj/src/vamps_0.99/src/soil/RCS/smooth.c,v 1.4 1996/11/05 15:00:48 schj Alpha $ 
d5 1
a5 1
 *  $Date: 1996/11/05 15:00:48 $
d10 1
a10 1
"$Id: smooth.c,v 1.4 1996/11/05 15:00:48 schj Alpha $";
@


1.4
log
@Updated to Alpha version
@
text
@d1 1
a1 1
/* $Header: /home/schj/src/vamps_0.99/src/soil/RCS/smooth.c,v 1.3 1996/10/22 17:56:23 schj Exp $ 
d5 1
a5 1
 *  $Date: 1996/10/22 17:56:23 $
d10 1
a10 1
"$Id: smooth.c,v 1.3 1996/10/22 17:56:23 schj Exp $";
d16 9
a24 9
/*-
 * void smooth (int inter,int what)
 * smooths the ksat profile by using a simple moving
 * average of size inter. If inter = 0 no smoothing is done.
 * What determine what to smooth:
 * 1 = ksat
 * 2 = thetas
 * 3 = residual_water
 */
d30 2
d47 1
a47 1
		  tot += soilparm[j].ksat;
d50 1
a50 1
		  tot += soilparm[j].thetas;
d53 1
a53 1
		  tot += soilparm[j].residual_water;
d61 1
a61 1
	      soilparm[i].ksat = (double) (1.0 / (double) pt) * tot;
d64 1
a64 1
	      soilparm[i].thetas = (double) (1.0 / (double) pt) * tot;
d67 1
a67 1
	      soilparm[i].residual_water = (double) (1.0 / (double) pt) * tot;
d83 1
a83 1
		  tot += soilparm[j].ksat;
d86 1
a86 1
		  tot += soilparm[j].thetas;
d89 1
a89 1
		  tot += soilparm[j].residual_water;
d98 1
a98 1
	      soilparm[i].ksat = (double) (1.0 / (double) pt) * tot;
d101 1
a101 1
	      soilparm[i].thetas = (double) (1.0 / (double) pt) * tot;
d104 1
a104 1
	      soilparm[i].residual_water = (double) (1.0 / (double) pt) * tot;
d118 1
a118 1
		  tot += soilparm[j].ksat;
d121 1
a121 1
		  tot += soilparm[j].thetas;
d124 1
a124 1
		  tot += soilparm[j].residual_water;
d132 1
a132 1
	      soilparm[i].ksat = (double) (1.0 / (double) pt) * tot;
d135 1
a135 1
	      soilparm[i].thetas = (double) (1.0 / (double) pt) * tot;
d138 1
a138 1
	      soilparm[i].residual_water = (double) (1.0 / (double) pt) * tot;
@


1.3
log
@removed log in file
@
text
@d1 1
a1 1
/* $Header: /homes/schj/src/vamps_0.98/src/soil/RCS/smooth.c,v 1.2 1996/04/09 12:08:16 schj Exp $ 
d5 1
a5 1
 *  $Date: 1996/04/09 12:08:16 $
d10 1
a10 1
"$Id: smooth.c,v 1.2 1996/04/09 12:08:16 schj Exp $";
@


1.2
log
@minor
@
text
@d1 1
a1 2
/* 
  * $Header: /home/hkl/hydro/promo/schj/nhome/src/vamps_0.98/src/soil/RCS/smooth.c,v 1.1 1996/03/18 18:14:45 schj alpha $ 
d3 1
a3 1
/*- $RCSfile: smooth.c,v $
d5 1
a5 8
 *  $Date: 1996/03/18 18:14:45 $
 *  $Log: smooth.c,v $
 *  Revision 1.1  1996/03/18 18:14:45  schj
 *  Initial revision
 *
 * Revision 1.1  1996/02/15  10:23:07  schj
 * Initial revision
 *
d10 1
a10 1
"$Id: smooth.c,v 1.1 1996/03/18 18:14:45 schj alpha $";
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
  * $Header: /home/hkl/hydro/promo/schj/nhome/src/vamps_0.97/src/soil/RCS/howsat.c,v 1.1 1996/02/15 10:23:07 schj Exp $ 
d4 1
a4 1
/*- $RCSfile: howsat.c,v $
d6 5
a10 2
 *  $Date: 1996/02/15 10:23:07 $
 *  $Log: howsat.c,v $
d18 1
a18 1
"$Id: howsat.c,v 1.1 1996/02/15 10:23:07 schj Exp $";
@
